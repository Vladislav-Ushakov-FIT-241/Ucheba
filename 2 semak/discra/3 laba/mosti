def find_bridges(graph):
    bridges = []
    visited = set()
    discovery = {}
    low = {}
    parent = {}
    time = [0]
    def dfs(u):
        visited.add(u)
        discovery[u] = low[u] = time[0]
        time[0] += 1
        for v in graph[u]:
            if v not in visited:
                parent[v] = u
                dfs(v)
                low[u] = min(low[u], low[v])
                if low[v] > discovery[u]:
                    bridges.append((u, v))
            elif v != parent.get(u):
                low[u] = min(low[u], discovery[v])
    for vertex in graph:
        if vertex not in visited:
            dfs(vertex)
    return bridges
graph = {
    0: [1, 2],
    1: [0, 2],
    2: [0, 1, 3],
    3: [2, 4],
    4: [3, 5],
    5: [4]
}
bridges = find_bridges(graph)
print("Мосты в графе:")
for u, v in bridges:
    print(f"{u} - {v}")
