using System;
using System.Collections.Generic;
class Subscriber
{
    public string Name { get; set; }
    public string PhoneNumber { get; set; }
    public string Operator { get; set; }
    public string Year { get; set; }
    public string City { get; set; }

    public Subscriber(string name, string phoneNumber, string operatorName, string year, string city)
    {
        Name = name;
        PhoneNumber = phoneNumber;
        Operator = operatorName;
        Year = year;
        City = city;
    }

    public override string ToString()
    {
        return $"{Name}, {PhoneNumber}, {Operator}, {Year}, {City}";
    }
}

class PhoneDirectory
{
    private List<Subscriber> subscribers = new List<Subscriber>();

    public void AddSubscriber()
    {
        Console.Write("Введите ФИО абонента: ");
        string name = Console.ReadLine();
        Console.Write("Введите номер телефона: ");
        string phoneNumber = Console.ReadLine();
        Console.Write("Введите оператора связи: ");
        string operatorName = Console.ReadLine();
        Console.Write("Введите год подключения: ");
        string year = Console.ReadLine();
        Console.Write("Введите город: ");
        string city = Console.ReadLine();

        Subscriber subscriber = new Subscriber(name, phoneNumber, operatorName, year, city);
        subscribers.Add(subscriber);
        Console.WriteLine("Абонент добавлен");
    }

    public void FindByOperator()
    {
        Console.Write("Введите оператора для поиска: ");
        string operatorName = Console.ReadLine();
        var results = subscribers.FindAll(sub => sub.Operator.Equals(operatorName, StringComparison.OrdinalIgnoreCase));

        if (results.Count > 0)
        {
            Console.WriteLine("Найденные абоненты:");
            foreach (var sub in results)
            {
                Console.WriteLine(sub);
            }
        }
        else
        {
            Console.WriteLine("Абоненты не найдены");
        }
    }

    public void FindByYear()
    {
        Console.Write("Введите год подключения для поиска: ");
        string year = Console.ReadLine();
        var results = subscribers.FindAll(sub => sub.Year.Equals(year));

        if (results.Count > 0)
        {
            Console.WriteLine("Найденные абоненты:");
            foreach (var sub in results)
            {
                Console.WriteLine(sub);
            }
        }
        else
        {
            Console.WriteLine("Абоненты не найдены");
        }
    }

    public void FindByPhoneNumber()
    {
        Console.Write("Введите номер телефона для поиска: ");
        string phoneNumber = Console.ReadLine();
        var results = subscribers.FindAll(sub => sub.PhoneNumber.Equals(phoneNumber));

        if (results.Count > 0)
        {
            Console.WriteLine("Найденные абоненты:");
            foreach (var sub in results)
            {
                Console.WriteLine(sub);
            }
        }
        else
        {
            Console.WriteLine("Абоненты не найдены");
        }
    }

    public void Menu()
    {
        while (true)
        {
            Console.WriteLine("\nМеню:");
            Console.WriteLine("1. Добавить абонента");
            Console.WriteLine("2. Найти абонента по оператору");
            Console.WriteLine("3. Найти абонента по году подключения");
            Console.WriteLine("4. Найти абонента по номеру телефона");
            Console.WriteLine("5. Выход");

            Console.Write("Выберите опцию (1-5): ");
            string choice = Console.ReadLine();

            switch (choice)
            {
                case "1":
                    AddSubscriber();
                    break;
                case "2":
                    FindByOperator();
                    break;
                case "3":
                    FindByYear();
                    break;
                case "4":
                    FindByPhoneNumber();
                    break;
                case "5":
                    Console.WriteLine("Выход");
                    return;
                default:
                    Console.WriteLine("Некорректный выбор. Пожалуйста, попробуйте снова");
                    break;
            }
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        PhoneDirectory directory = new PhoneDirectory();
        directory.Menu();
    }
}
