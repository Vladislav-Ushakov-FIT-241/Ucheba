using System;
using System.Collections.Generic;
using System.Linq;

public class Supplier
{
    public int Id { get; set; }
    public string Name { get; set; }
    public string PhoneNumber { get; set; }
}

public class Product
{
    public int Id { get; set; }
    public string Name { get; set; }
}

public class ProductMovement
{
    public int ProductId { get; set; }
    public int SupplierId { get; set; }
    public string Prefix { get; set; }
    public DateTime Date { get; set; }
    public int Quantity { get; set; }
    public decimal PricePerUnit { get; set; }
}

public class DataAccess
{
    public List<Supplier> Suppliers { get; set; } = new List<Supplier>();
    public List<Product> Products { get; set; } = new List<Product>();
    public List<ProductMovement> ProductMovements { get; set; } = new List<ProductMovement>();

    public DataAccess()
    {
        Suppliers.Add(new Supplier { Id = 1, Name = "Поставщик 1", PhoneNumber = "123-456-7890" });
        Suppliers.Add(new Supplier { Id = 2, Name = "Поставщик 2", PhoneNumber = "987-654-3210" });

        Products.Add(new Product { Id = 1, Name = "Товар 1" });
        Products.Add(new Product { Id = 2, Name = "Товар 2" });
        Products.Add(new Product { Id = 3, Name = "Товар 3" });

        ProductMovements.Add(new ProductMovement { ProductId = 1, SupplierId = 1, Prefix = "Поступление", Date = DateTime.Now.AddDays(-2), Quantity = 10, PricePerUnit = 100 });
        ProductMovements.Add(new ProductMovement { ProductId = 1, SupplierId = 1, Prefix = "Продажа", Date = DateTime.Now.AddDays(-1), Quantity = 5, PricePerUnit = 120 });
        ProductMovements.Add(new ProductMovement { ProductId = 2, SupplierId = 2, Prefix = "Поступление", Date = DateTime.Now.AddDays(-3), Quantity = 20, PricePerUnit = 50 });
        ProductMovements.Add(new ProductMovement { ProductId = 2, SupplierId = 2, Prefix = "Продажа", Date = DateTime.Now.AddDays(-1), Quantity = 10, PricePerUnit = 60 });
        ProductMovements.Add(new ProductMovement { ProductId = 1, SupplierId = 2, Prefix = "Поступление", Date = DateTime.Now.AddDays(-4), Quantity = 15, PricePerUnit = 90 });
        ProductMovements.Add(new ProductMovement { ProductId = 3, SupplierId = 1, Prefix = "Поступление", Date = DateTime.Now.AddDays(-5), Quantity = 30, PricePerUnit = 20 });
        ProductMovements.Add(new ProductMovement { ProductId = 3, SupplierId = 1, Prefix = "Продажа", Date = DateTime.Now.AddDays(-2), Quantity = 10, PricePerUnit = 25 });
    }

    public Dictionary<string, int> GetProductBalances()
    {
        var balances = ProductMovements
            .GroupBy(pm => pm.ProductId)
            .ToDictionary(
                g => Products.First(p => p.Id == g.Key).Name,
                g => g.Sum(pm => pm.Prefix == "Поступление" ? pm.Quantity : -pm.Quantity)
            );

        return balances;
    }

    public Dictionary<string, List<string>> GetProductsBySupplier()
    {
        var productsBySupplier = ProductMovements
            .Where(pm => pm.Prefix == "Поступление")
            .GroupBy(pm => pm.SupplierId)
            .ToDictionary(
                g => Suppliers.First(s => s.Id == g.Key).Name,
                g => g.Select(pm => Products.First(p => p.Id == pm.ProductId).Name).ToList()
            );

        return productsBySupplier;
    }

    public Dictionary<DateTime, List<string>> GetSalesByDate()
    {
        var salesByDate = ProductMovements
            .Where(pm => pm.Prefix == "Продажа")
            .GroupBy(pm => pm.Date.Date)
            .ToDictionary(
                g => g.Key,
                g => g.Select(pm => Products.First(p => p.Id == pm.ProductId).Name).ToList()
            );

        return salesByDate;
    }
}

public class Program
{
    public static void Main(string[] args)
    {
        DataAccess db = new DataAccess();

        Console.WriteLine("Остатки товаров:");
        var productBalances = db.GetProductBalances();
        foreach (var kvp in productBalances)
        {
            Console.WriteLine($"  {kvp.Key}: {kvp.Value}");
        }

        Console.WriteLine();

        Console.WriteLine("Товары сгруппированные по поставщикам (только поставки):");
        var productsBySupplier = db.GetProductsBySupplier();
        foreach (var kvp in productsBySupplier)
        {
            Console.WriteLine($"  {kvp.Key}: {string.Join(", ", kvp.Value)}");
        }

        Console.WriteLine();

        Console.WriteLine("Товары по продажам, сгруппированные по дате продажи:");
        var salesByDate = db.GetSalesByDate();
        foreach (var kvp in salesByDate)
        {
            Console.WriteLine($"  {kvp.Key.ToShortDateString()}: {string.Join(", ", kvp.Value)}");
        }
    }
}
